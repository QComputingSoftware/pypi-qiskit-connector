# @Author: Dr. Jeffrey Chijioke-Uche, IBM Quantum Ambassador
# @last update: 2025-05-04
# @Description: This workflow scrapes public Pepy.tech stats for the Qiskit Connector package and updates the badge.
# @File: .github/workflows/m-downloads.yml
# @Usage: Triggered on schedule or manually; uses Pepy.tech Pro API securely.
#_________________________________________________________________________________________________________

name: üìø Monthly Downloads

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"
    - cron: "0 2 * * 0"
    - cron: "0 2 * * 1"
    - cron: "0 2 * * 2"
    - cron: "0 2 * * 3"
    - cron: "0 2 * * 4"
    - cron: "0 2 * * 5"
    - cron: "0 2 * * 6"

permissions:
  contents: write
  actions: write

jobs:
  build-monthly-downloads-badge:
    name: üìä Monthly Downloads from Pepy
    runs-on: ubuntu-latest

    steps:
      - name: üìø Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qiskit-connector
          pip install requests

      #_____________________________________________________________________________ 
      - name: üîç Extract Downloads
        id: get_downloads
        env:
          PEPY_API_TOKEN: ${{ secrets.PEPY_API_TOKEN }}
        run: |
          echo "üîç Extracting download record..."
          python3 - << 'PYCODE'
          import requests
          import os

          def get_qiskit_connector_total_downloads_pro_api_v3():
              project_name = "qiskit-connector"
              base_url = "https://api.pepy.tech"
              endpoint = f"{base_url}/service-api/v1/pro/projects/{project_name}/downloads"
              api_token = os.environ.get("PEPY_API_TOKEN")

              if not api_token:
                  print("Error: PEPY_API_TOKEN environment variable not set.")
                  return None

              headers = {"X-API-Key": api_token, "Accept": "application/json"}
              params = {"includeCIDownloads": "true", "timeRange": "FOUR_MONTHS"}

              try:
                  response = requests.get(endpoint, headers=headers, params=params)
                  response.raise_for_status()
                  data = response.json()

                  total_downloads = 0
                  if "downloads" in data:
                      for date_data in data["downloads"].values():
                          for count in date_data.values():
                              total_downloads += count
                  return total_downloads

              except Exception as e:
                  print(f"Error fetching data: {e}")
                  return None

          total_downloads = get_qiskit_connector_total_downloads_pro_api_v3()
          if total_downloads is not None:
              monthly_downloads = round(total_downloads * 0.4333)
              print(f"‚úÖ Total: {total_downloads}, Monthly (est.): {monthly_downloads}")

              display_value = f"{monthly_downloads:,}"
              if monthly_downloads >= 1000:
                  display_value = f"{monthly_downloads // 1000}k"

              # Write to GitHub output
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write(f"monthly_downloads={display_value}/month\n")
          else:
              print("‚ùå Failed to retrieve data.")
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write("monthly_downloads=0/month\n")
          PYCODE
      #_____________________________________________________________________________

      - name: üö∞Ô∏è Generate Badge
        uses: emibcn/badge-action@v2
        with:
          label: "downloads"
          label-color: "555"
          status: "${{ steps.get_downloads.outputs.monthly_downloads }}"
          color: "7DD71D"
          style: "flat"
          path: "docs/badges/monthly-downloads.svg"

      - name: üöÄ Commit and Push Badge
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add docs/badges/monthly-downloads.svg
          git commit -m "üìà Qiskit Code Update - monthly downloads badge" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
