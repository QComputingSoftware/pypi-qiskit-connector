# @Author: Dr. Jeffrey Chijioke-Uche, IBM Quantum Ambassador
# @last update: 2025-03-01
# @Description: This workflow builds a license badge that show the license type of the software for markdown files.
# @BadgeLocation:  doc/badges/license-badge.svg
# @File: .github/workflows/license.yml
# @License: Apache-2.0, Creative Commons Attribution 4.0
#___________________________________________________________

name: Software License Badge

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  deployments: write
  pull-requests: write
  checks: write
  statuses: write
  issues: write
  discussions: write
  pages: write
  packages: write
  security-events: write
  repository-projects: write

jobs:
  license-badge:
    name: üè∑Ô∏è License Badge Generator
    runs-on: ubuntu-latest

    env:
      GPG_NAME_REAL: ${{ secrets.GPG_NAME_REAL }}
      GPG_NAME_EMAIL: ${{ secrets.GPG_NAME_EMAIL }}
      GPG_NAME_COMMENT: ${{ secrets.GPG_NAME_COMMENT }}
      GPG_GITHUB_TOKEN: ${{ secrets.GPG_GITHUB_OPERATOR }}

    steps:
      - name: ‚¨áÔ∏è Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: refs/heads/main

      - name: Qiskit Connector Active State
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          python tests/pkg_active_check.py

      - name: üìÇ Ensure badge directory exists
        run: mkdir -p doc/badges

      - name: üõ†Ô∏è Generate license badge
        uses: emibcn/badge-action@v2
        with:
          label: "licenses"
          label-color: "555"
          status: "Apache-2.0 | Creative Commons Attribution 4.0"
          color: "7DD71D"
          style: "classic"
          path: "docs/badges/license-badge.svg"

      #_____________________________________________________________________________
      - name: üîê Generate GPG Key Pair
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg

          cat > genkey <<EOF
          Key-Type: RSA
          Key-Length: 4096
          Subkey-Type: RSA
          Subkey-Length: 4096
          Name-Real: $GPG_NAME_REAL
          Name-Email: $GPG_NAME_EMAIL
          Name-Comment: $GPG_NAME_COMMENT
          Expire-Date: 0
          %no-protection
          %commit
          EOF

          echo "üîê Generating GPG Key..."
          gpg --batch --generate-key genkey 2>/dev/null

          if [ $? -eq 0 ]; then
            echo "üîê GPG Key generated successfully ‚úÖ"
          else
            echo "‚ùå GPG Key generation failed"
            exit 1
          fi

          # Extract but do NOT display full key details
          export GPG_KEY_ID=$(gpg --list-secret-keys --with-colons "$GPG_NAME_EMAIL" | grep '^sec' | cut -d':' -f5)
          echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV

      - name: ‚öôÔ∏è Configure Git Identity and Signing
        run: |
          git pull
          git config --global user.name "$GPG_NAME_REAL"
          git config --global user.email "$GPG_NAME_EMAIL"
          git config --global user.signingkey $GPG_KEY_ID
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true
          echo "Git configuration for GPG signing completed."
          git pull
      #_____________________________________________________________________________

      - name: üöÄ Commit badge to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git pull
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git fetch origin
          git checkout -B main origin/main
          git add docs/badges/license-badge.svg
          git commit -S -m "üîñ Quantum Computing Code Update - Inteli Check" || echo "‚ö†Ô∏è No changes to commit"
          git push origin HEAD:refs/heads/main
          git pull



