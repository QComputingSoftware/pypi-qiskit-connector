name: Qiskit Connector Latest Release

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:  # Required for external workflows to trigger this via API  workflow_dispatch:

permissions:
  contents: write # <-- All Steps

jobs:
  update-badge:

    runs-on: ubuntu-latest

    permissions:
      contents: write # <-- Permissions to write to the repository

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üè∑Ô∏è Get latest version from PyPI
        id: extract_version
        run: |
          VERSION=$(curl -s https://pypi.org/pypi/qiskit-connector/json | jq -r '.info.version')
          echo "Latest PyPI version is $VERSION"
          echo "latest=$VERSION" >> "$GITHUB_OUTPUT"


      # Ensure directory exists
      - name: üìÇ Create badges directory
        run: |
          mkdir -p docs/badges
          echo "Badges directory created!"


      - name: üõ†Ô∏è Create badge SVG
        uses: emibcn/badge-action@v2
        with:
          label: 'Qiskit Connector Latest Release'
          labelColor: 555
          status: v${{ steps.extract_version.outputs.latest }}
          gradient: blue
          style: classic
          path: docs/badges/release.svg

      - name: üöÄ Push badge to repo using  GITHUB_TOKEN - (Recommended)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions" && echo "GitHub Actions user set"
          git config --global user.email "actions@github.com" && echo "GitHub Actions email set"
          git remote set-url origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" && echo "Origin URL set to use the Default Token!"
          git pull origin ${{ github.ref_name }} && echo "Pulled latest changes"
          git add docs/badges/release.svg && echo "Badge added to commit"
          git commit -m "Update release badge to v${{ steps.extract_version.outputs.latest }}" && echo "Commit successful" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }} && echo "Push successful" || echo "No changes to push"
      
      - name: üöÄ Push badge to repo using  PAT_GITHUB - (Optional)
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          # git pull origin ${{ github.ref_name }} && echo "Pulled latest changes"
          # git add docs/badges/release.svg && echo "Badge added to commit"
          # git commit -m "Update release badge to v${{ steps.extract_version.outputs.latest }}" && echo "Commit successful" || echo "No changes to commit"
          # git remote set-url origin https://x-access-token:${{ secrets.PAT_GITHUB }}@github.com/${{ github.repository }}
          # git push origin HEAD:${{ github.ref_name }} && echo "Push successful" || echo "No changes to push"

