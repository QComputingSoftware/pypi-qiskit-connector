# @Author: Dr. Jeffrey Chijioke-Uche, IBM Quantum Ambassador
# @last update: 2025-03-01

name: Sync Tag ‚Üí GitHub Release

on:
  push:
    tags:
      - '[v]?[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch: 
  schedule:
    - cron: '0 0 * * *'    
    - cron: '0 2 * * *'    
    - cron: '0 4 * * *'    

permissions:
  contents: write
  actions: write
  deployments: write
  pull-requests: write
  checks: write
  statuses: write
  
jobs:
  create_release:
    name: üè∑Ô∏è Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Create GitHub Release with fallback for existing tags
        shell: bash
        run: |
          echo "ü™™ Tag detected: ${{ github.ref_name }}"
          echo "‚öôÔ∏è Attempting to create GitHub Release..."

          json=$(
            jq -n --arg tag "${{ github.ref_name }}" --arg body "Auto‚Äêgenerated release for tag ${{ github.ref_name }}" '{
              tag_name: $tag,
              name: "Release \($tag)",
              body: $body,
              draft: false,
              prerelease: ($tag | test("-") )
            }'
          )

          response=$(curl -s -o response.json -w "%{http_code}" \
            -X POST "https://api.github.com/repos/${{ github.repository }}/releases" \
            -H "Authorization: token ${{ secrets.PAT_GITHUB }}" \
            -H "Accept: application/vnd.github+json" \
            -d "$json")

          if [[ "$response" == "201" ]]; then
            echo "‚úÖ Release created successfully."
          elif [[ "$response" == "422" ]]; then
            echo "‚ö†Ô∏è Release already exists. Skipping creation."
          else
            echo "‚ùå Unexpected error occurred:"
            cat response.json
            exit 1
          fi

        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB }}
          GITHUB_REF_NAME: ${{ github.ref_name }}