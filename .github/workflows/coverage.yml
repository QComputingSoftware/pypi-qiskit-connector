# @Author: Dr. Jeffrey Chijioke-Uche, IBM Quantum Ambassador
# @last update: 2025-03-01

name: Qiskit Connector Code Coverage Analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:  # Required for external workflows to trigger this via API

permissions:
  contents: write
  actions: write

jobs:
  coverage-badge:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout main branch only
        uses: actions/checkout@v4
        with:
          ref: refs/heads/main   # 🔒 Avoid tag/branch ambiguity

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install pytest coverage pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install qiskit-connector

      - name: 🧪 Run tests with coverage
        run: coverage run --source=qiskit_connector -m pytest

      - name: 📊 Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(coverage report | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          echo "coverage=$COVERAGE%" >> "$GITHUB_OUTPUT"

      - name: 📂 Ensure badge directory exists
        run: mkdir -p docs/badges

      - name: 🛠️ Generate coverage badge
        uses: emibcn/badge-action@v2
        with:
          label: "Qiskit Connector Code Coverage Analysis"
          label-color: "555"
          status: "${{ steps.coverage.outputs.coverage }}"
          color: "green"
          style: "classic"
          path: "docs/badges/coverage.svg"

      - name: 🚀 Commit badge to main and sync to stable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          # 🧼 Clean workspace
          git reset --hard
          git clean -fd

          # ✅ Ensure we’re truly on main
          git fetch origin refs/heads/main:refs/remotes/origin/main
          git checkout -B main origin/main

          git add docs/badges/coverage.svg
          git commit -m "🛡️ Qiskit Code Update - Inteli Check" || echo "⚠️ No changes to commit"
          git push -f origin HEAD:refs/heads/main

          # # ✅ Sync to stable
          # git fetch origin refs/heads/stable:refs/remotes/origin/stable || true
          # git checkout -B stable origin/stable || git checkout -b stable
          # if git merge main -m "🔁 Sync coverage badge from main to stable"; then
          #   git push -f origin HEAD:refs/heads/stable
          # else
          #   echo "⚠️ Merge conflict detected. Skipping push to protect stable."
          #   git merge --abort || true
          # fi
