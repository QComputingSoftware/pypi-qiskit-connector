@software{Chijioke-Uche_Qiskit_Connector_2025,
  doi = {10.5281/zenodo.15304311},
  title = {{Quantum Computing Qiskit Connector}},
  url = {https://pypi.org/project/qiskit-connector},
  author = {Chijioke-Uche, Jeffrey},
  keywords = {"quantum computing qiskit connector", "quantum computing qiskit connector python", "quantum computing qiskit connector library", "quantum computing qiskit connector package", "quantum computing qiskit connector module", "quantum computing qiskit connector software", "quantum computing qiskit connector tool", "quantum computing qiskit connector tools", "quantum computing qiskit connector framework", "quantum computing qiskit connector framework python", "quantum computing qiskit connector framework library", "quantum computing qiskit connector framework package", "quantum computing qiskit connector framework module", "quantum computing qiskit connector framework software", "quantum computing qiskit connector framework tool", "quantum computing qiskit connector framework tools", "quantum computing qiskit connector framework tools python", "quantum computing qiskit connector framework tools library", "quantum computing qiskit connector framework tools package", "quantum computing qiskit connector framework tools module", "qiskit connector", "quantum connection", "quantum computing", "ibm quantum", "qiskit", "quantum runtimeservice", "quantum automated backend connectors", "qpu resources", "qubits processing unit", "quantum programming language", "quantum circuit", "quantum open plan", "quantum premier plan", "quantum standard plan", "quantum dedicated plan", "quantum paid plan", "quantum workloads", "physical quantum computer", "quantum algorithms", "qiskit integration libraries", "qiskit connector interface", "python wrapper for Qiskit", "production-ready Qiskit tooling", "quantum SDK connection automation tools"},
  abstract = {The Qiskit Connector transforms how quantum developers connect to IBM Quantum backends by automating every step of the authentication, plan detection, and backend selection process. Instead of writing extensive boilerplate setup code for each project, developers can now seamlessly authenticate, dynamically detect whether they are using an Open or Paid plan, and instantly access the optimal backend QPUresource which is least-busy using a single intuitive keyword: backend. The connector intelligently manages quantum computing plan environment variables and Qiskit runtime service configuration for sticky reusability of QPU resources from the backend, allowing quantum developers to streamline connection workflows and immediately focus on building, testing, and scaling quantum applications.},
  license = {Apache-2.0, Creative Commons Attribution 4.0 International},
  version = {2.1.9},
  year = {2025},
  publisher = {Zenodo},
  type = {software},
  editor = {Chijioke-Uche, Jeffrey},
  note = {Dr. Jeffrey Chijioke-Uche},